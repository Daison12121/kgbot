"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
"""
import asyncio
from config import Config
from storage import Storage


async def test_storage():
    """–¢–µ—Å—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...\n")
    
    storage = Storage()
    
    # –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    print("1. –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:")
    admins = storage.get_admins()
    print(f"   –¢–µ–∫—É—â–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {admins}")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
    test_admin_id = 999999999
    if storage.add_admin(test_admin_id):
        print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω {test_admin_id} –¥–æ–±–∞–≤–ª–µ–Ω")
    
    admins = storage.get_admins()
    print(f"   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {admins}")
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
    if storage.remove_admin(test_admin_id):
        print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω {test_admin_id} —É–¥–∞–ª–µ–Ω")
    
    admins = storage.get_admins()
    print(f"   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {admins}\n")
    
    # –¢–µ—Å—Ç –º–µ–Ω—é
    print("2. –¢–µ—Å—Ç –º–µ–Ω—é:")
    test_menu_text = "üçΩÔ∏è **–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ–Ω—é**\n\n‚Ä¢ –ë–ª—é–¥–æ 1 - 100‚ÇΩ\n‚Ä¢ –ë–ª—é–¥–æ 2 - 200‚ÇΩ"
    storage.save_menu(test_menu_text, None)
    print(f"   ‚úÖ –ú–µ–Ω—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
    
    menu = storage.get_menu()
    print(f"   –¢–µ–∫—Å—Ç –º–µ–Ω—é: {menu['text'][:50]}...")
    print(f"   –§–æ—Ç–æ: {menu['photo']}")
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {menu['updated_at']}\n")
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø—Ä–æ–π–¥–µ–Ω—ã!\n")


async def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n")
    
    config = Config()
    
    print(f"BOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if config.BOT_TOKEN else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"CHANNEL_ID: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if config.CHANNEL_ID else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"PHONE_NUMBER: {config.PHONE_NUMBER}")
    print(f"OWNER_ID: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if config.OWNER_ID else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"STORAGE_FILE: {config.STORAGE_FILE}\n")
    
    try:
        config.validate()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞!\n")
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}\n")


async def test_bot_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...\n")
    
    try:
        from telegram import Bot
        config = Config()
        
        if not config.BOT_TOKEN:
            print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.\n")
            return
        
        bot = Bot(token=config.BOT_TOKEN)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
        me = await bot.get_me()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –ò–º—è –±–æ—Ç–∞: {me.first_name}")
        print(f"   Username: @{me.username}")
        print(f"   ID: {me.id}\n")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É
        if config.CHANNEL_ID:
            try:
                chat = await bot.get_chat(config.CHANNEL_ID)
                print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –µ—Å—Ç—å!")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}")
                print(f"   –¢–∏–ø: {chat.type}")
                print(f"   ID: {chat.id}\n")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É: {e}")
                print(f"   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.\n")
        else:
            print("‚ö†Ô∏è CHANNEL_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–Ω–∞–ª–∞.\n")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}\n")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("="*50)
    print("ü§ñ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê")
    print("="*50 + "\n")
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    await test_config()
    
    # –¢–µ—Å—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    await test_storage()
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
    await test_bot_connection()
    
    print("="*50)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("="*50)


if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")